"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.HeadlessInspector = void 0;
const command_handler_1 = require("./command_handler");
const evemitter_1 = require("./evemitter");
const interceptors_1 = require("./interceptors");
__exportStar(require("./evemitter"), exports);
__exportStar(require("./interceptors"), exports);
__exportStar(require("./types"), exports);
class HeadlessInspector {
    constructor() {
        this.isEnabled = false;
        this.debugEventEmitter = (0, evemitter_1.evemitter)();
    }
    on(event, listener) {
        return this.debugEventEmitter.on(event, listener);
    }
    onAll(listener) {
        this.debugEventEmitter.onAll(listener);
        return;
    }
    send(command, params) {
        return (0, command_handler_1.commandHandler)(command, params);
    }
    enable() {
        if (this.isEnabled)
            return;
        this.isEnabled = true;
        (0, interceptors_1.interceptConsole)(this.debugEventEmitter);
        (0, interceptors_1.interceptNetwork)(this.debugEventEmitter);
    }
    disable() {
        // TODO
    }
}
exports.HeadlessInspector = HeadlessInspector;
exports.default = HeadlessInspector;
