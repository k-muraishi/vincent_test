declare type HandlerFoAllEvents<EventValueMap extends Record<string, unknown>> = <Key extends keyof EventValueMap>(key: Key, value: EventValueMap[Key]) => void;
export declare type EvEmitter<EventValueMap extends Record<string, unknown>> = {
    on: <Key extends keyof EventValueMap>(key: Key, handler: (v: EventValueMap[Key]) => void) => void;
    onAll: (handlerForAllEvents: HandlerFoAllEvents<EventValueMap>) => void;
    emit: <Key extends keyof EventValueMap>(key: Key, value: EventValueMap[Key]) => void;
};
export declare const evemitter: <EventValueMap extends Record<string, unknown>>() => EvEmitter<EventValueMap>;
export {};
