"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PropertyPreview = void 0;
class PropertyPreview {
    constructor(name, value) {
        this.name = name;
        switch (typeof value) {
            case 'string': {
                this.type = 'string';
                this.value = value;
                break;
            }
            case 'number': {
                this.type = 'number';
                this.value = `${value}`;
                break;
            }
            case 'boolean': {
                this.type = 'boolean';
                this.value = `${value}`;
                break;
            }
            case 'undefined': {
                this.type = 'undefined';
                this.value = `${value}`;
                break;
            }
            case 'bigint': {
                this.type = 'bigint';
                this.value = value.toString();
                break;
            }
            case 'symbol': {
                this.type = 'symbol';
                this.value = value.toString();
                break;
            }
            case 'function': {
                this.type = 'function';
                this.value = value.toString();
                break;
            }
            case 'object': {
                this.type = 'object';
                if (value === null) {
                    this.value = 'null';
                    break;
                }
                if (Array.isArray(value)) {
                    this.value = `Array(${value.length})`;
                    this.subtype = 'array';
                    break;
                }
                this.value = 'Object';
                break;
            }
            default:
                throw new Error(`Unknown type: ${value} ${typeof value}`);
        }
    }
}
exports.PropertyPreview = PropertyPreview;
