import { Inspector } from '@line/headless-inspector-core';
import { CdpEvents, CdpCommands } from './types';
export declare class HeadlessInspectorCdp implements Inspector<CdpEvents, CdpCommands> {
    private enabled;
    private eventEmitter;
    private commandHandlerMap;
    private inspector;
    constructor();
    on<Key extends keyof CdpEvents>(event: Key, listener: (params: CdpEvents[Key]) => void): void;
    onAll(listener: <Key extends keyof CdpEvents>(key: Key, value: CdpEvents[Key]) => void): void;
    send<Key extends keyof CdpCommands>(command: Key, params: CdpCommands[Key]['paramsType']): CdpCommands[Key]['returnType'] | undefined;
    private setCommandHandler;
    enable(): void;
    disable(): void;
}
export default HeadlessInspectorCdp;
